# Class is a user-defined data type that acts as a blueprint for creating objects. 
# It defines a set of attributes(variables) and methods(functions) that the created objects will have.

# Object is an instance of a class. When a class is defined no memory is allocated until an object of that class is created. 
# Each object can have unique attribute values, but the structure and behavior defined by class are shared across all objects of that class.

# Ex : 
# class Car:
#     def __init__(self, name, price, color):
#         self.name = name
#         self.price = price
#         self.color = color
        
#     def __repr__(self):
#         return f"Car: {self.name}, price: {self.price}, color: {self.color}"

# car1 = Car('Car 1', 50000, 'Black')
# car2 = Car('Car 2', 65000, 'White')
                                                                     
# print(car1)                                                           
# print(car2)

# Output : Car: Car 1, price: 50000, color: Black
#               Car: Car 2, price: 65000, color: White

# -	The class name has to be started with capital letter and there should not be separate words.
# -	__init__ method is called as constructer and it sets the initial state of the object.
# -	The ‘self’ in python represents an instances of a class. By using it we can access the attributes & methods of the class.
# -	name, price & color are attributes.
# -	To access the attributes the dot notation is used.
# -	__repr__ method defines a string representation of an object that is meant to be clear & useful for developers.
